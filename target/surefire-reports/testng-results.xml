<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-13T12:54:43 IST" name="All Test Suite" finished-at="2025-08-13T12:55:39 IST" duration-ms="56029">
    <groups>
    </groups>
    <test started-at="2025-08-13T12:54:43 IST" name="ScrapperTests" finished-at="2025-08-13T12:55:35 IST" duration-ms="52363">
      <class name="OG_image.ScrappersFacebook">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:OG_image.ScrappersFacebook@16d04d3d]" started-at="2025-08-13T12:54:43 IST" name="beforeTest" finished-at="2025-08-13T12:54:49 IST" duration-ms="5820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="facebookLanding()[pri:0, instance:OG_image.ScrappersFacebook@16d04d3d]" started-at="2025-08-13T12:54:49 IST" name="facebookLanding" finished-at="2025-08-13T12:55:24 IST" duration-ms="34846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookLanding -->
        <test-method signature="facebookPostInce(java.lang.String)[pri:0, instance:OG_image.ScrappersFacebook@16d04d3d]" started-at="2025-08-13T12:55:27 IST" name="facebookPostInce" data-provider="needTotestUrls" finished-at="2025-08-13T12:55:33 IST" depends-on-methods="OG_image.ScrappersFacebook.facebookLanding" duration-ms="6067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/store/collections/surfaceproaccessories]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookPostInce -->
        <test-method signature="facebookPostInce(java.lang.String)[pri:0, instance:OG_image.ScrappersFacebook@16d04d3d]" started-at="2025-08-13T12:55:33 IST" name="facebookPostInce" data-provider="needTotestUrls" finished-at="2025-08-13T12:55:34 IST" depends-on-methods="OG_image.ScrappersFacebook.facebookLanding" duration-ms="1735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookPostInce -->
        <test-method signature="logLastLine()[pri:0, instance:OG_image.ScrappersFacebook@16d04d3d]" started-at="2025-08-13T12:55:34 IST" name="logLastLine" finished-at="2025-08-13T12:55:34 IST" depends-on-methods="OG_image.ScrappersFacebook.facebookPostInce" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logLastLine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:OG_image.ScrappersFacebook@16d04d3d]" started-at="2025-08-13T12:55:34 IST" name="afterTest" finished-at="2025-08-13T12:55:35 IST" duration-ms="879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- OG_image.ScrappersFacebook -->
    </test> <!-- ScrapperTests -->
    <test started-at="2025-08-13T12:54:43 IST" name="ScrapperTests2" finished-at="2025-08-13T12:55:39 IST" duration-ms="56028">
      <class name="OG_image.ScrappersLinkedIn">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:54:42 IST" name="beforeSuite" finished-at="2025-08-13T12:54:43 IST" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:54:43 IST" name="beforeTest" finished-at="2025-08-13T12:54:49 IST" duration-ms="5821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="LikedInLanding()[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:54:49 IST" name="LikedInLanding" finished-at="2025-08-13T12:55:27 IST" duration-ms="38531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LikedInLanding -->
        <test-method signature="LinkedInPostInception(java.lang.String)[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:55:28 IST" name="LinkedInPostInception" data-provider="needTotestUrls" finished-at="2025-08-13T12:55:35 IST" depends-on-methods="OG_image.ScrappersLinkedIn.LikedInLanding" duration-ms="7486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/store/collections/surfaceproaccessories]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinkedInPostInception -->
        <test-method signature="LinkedInPostInception(java.lang.String)[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:55:35 IST" name="LinkedInPostInception" data-provider="needTotestUrls" finished-at="2025-08-13T12:55:38 IST" depends-on-methods="OG_image.ScrappersLinkedIn.LikedInLanding" duration-ms="3118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinkedInPostInception -->
        <test-method signature="logLastLine()[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:55:38 IST" name="logLastLine" finished-at="2025-08-13T12:55:38 IST" depends-on-methods="OG_image.ScrappersLinkedIn.LinkedInPostInception" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logLastLine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:55:38 IST" name="afterTest" finished-at="2025-08-13T12:55:39 IST" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:OG_image.ScrappersLinkedIn@5656be13]" started-at="2025-08-13T12:55:39 IST" name="afterSuite" finished-at="2025-08-13T12:55:44 IST" duration-ms="4965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- OG_image.ScrappersLinkedIn -->
    </test> <!-- ScrapperTests2 -->
  </suite> <!-- All Test Suite -->
</testng-results>
