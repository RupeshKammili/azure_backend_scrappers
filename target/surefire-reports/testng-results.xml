<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-03T22:33:55 IST" name="All Test Suite" finished-at="2025-09-03T22:35:08 IST" duration-ms="72792">
    <groups>
    </groups>
    <test started-at="2025-09-03T22:33:55 IST" name="ScrapperTests" finished-at="2025-09-03T22:35:02 IST" duration-ms="67086">
      <class name="OG_image.ScrappersFacebook">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:OG_image.ScrappersFacebook@51399530]" started-at="2025-09-03T22:33:55 IST" name="beforeTest" finished-at="2025-09-03T22:34:11 IST" duration-ms="16034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="facebookLanding()[pri:0, instance:OG_image.ScrappersFacebook@51399530]" started-at="2025-09-03T22:34:11 IST" name="facebookLanding" finished-at="2025-09-03T22:34:42 IST" duration-ms="30648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookLanding -->
        <test-method signature="facebookPostInce(java.lang.String)[pri:0, instance:OG_image.ScrappersFacebook@51399530]" started-at="2025-09-03T22:34:45 IST" name="facebookPostInce" data-provider="needTotestUrls" finished-at="2025-09-03T22:34:52 IST" depends-on-methods="OG_image.ScrappersFacebook.facebookLanding" duration-ms="6745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/surface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookPostInce -->
        <test-method signature="facebookPostInce(java.lang.String)[pri:0, instance:OG_image.ScrappersFacebook@51399530]" started-at="2025-09-03T22:34:52 IST" name="facebookPostInce" data-provider="needTotestUrls" finished-at="2025-09-03T22:34:56 IST" depends-on-methods="OG_image.ScrappersFacebook.facebookLanding" duration-ms="4521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/surface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookPostInce -->
        <test-method signature="facebookPostInce(java.lang.String)[pri:0, instance:OG_image.ScrappersFacebook@51399530]" started-at="2025-09-03T22:34:56 IST" name="facebookPostInce" data-provider="needTotestUrls" finished-at="2025-09-03T22:35:00 IST" depends-on-methods="OG_image.ScrappersFacebook.facebookLanding" duration-ms="4061" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/surface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookPostInce -->
        <test-method signature="logLastLine()[pri:0, instance:OG_image.ScrappersFacebook@51399530]" started-at="2025-09-03T22:35:00 IST" name="logLastLine" finished-at="2025-09-03T22:35:00 IST" depends-on-methods="OG_image.ScrappersFacebook.facebookPostInce" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logLastLine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:OG_image.ScrappersFacebook@51399530]" started-at="2025-09-03T22:35:00 IST" name="afterTest" finished-at="2025-09-03T22:35:02 IST" duration-ms="1827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- OG_image.ScrappersFacebook -->
    </test> <!-- ScrapperTests -->
    <test started-at="2025-09-03T22:33:55 IST" name="ScrapperTests2" finished-at="2025-09-03T22:35:08 IST" duration-ms="72792">
      <class name="OG_image.ScrappersLinkedIn">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:33:54 IST" name="beforeSuite" finished-at="2025-09-03T22:33:55 IST" duration-ms="577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:33:55 IST" name="beforeTest" finished-at="2025-09-03T22:34:11 IST" duration-ms="16036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="LikedInLanding()[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:34:11 IST" name="LikedInLanding" finished-at="2025-09-03T22:34:54 IST" duration-ms="42385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LikedInLanding -->
        <test-method signature="LinkedInPostInception(java.lang.String)[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:34:54 IST" name="LinkedInPostInception" data-provider="needTotestUrls" finished-at="2025-09-03T22:34:59 IST" depends-on-methods="OG_image.ScrappersLinkedIn.LikedInLanding" duration-ms="5179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/surface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinkedInPostInception -->
        <test-method signature="LinkedInPostInception(java.lang.String)[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:34:59 IST" name="LinkedInPostInception" data-provider="needTotestUrls" finished-at="2025-09-03T22:35:03 IST" depends-on-methods="OG_image.ScrappersLinkedIn.LikedInLanding" duration-ms="3959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/surface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinkedInPostInception -->
        <test-method signature="LinkedInPostInception(java.lang.String)[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:35:03 IST" name="LinkedInPostInception" data-provider="needTotestUrls" finished-at="2025-09-03T22:35:06 IST" depends-on-methods="OG_image.ScrappersLinkedIn.LikedInLanding" duration-ms="3350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.microsoft.com/en-us/surface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinkedInPostInception -->
        <test-method signature="logLastLine()[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:35:06 IST" name="logLastLine" finished-at="2025-09-03T22:35:06 IST" depends-on-methods="OG_image.ScrappersLinkedIn.LinkedInPostInception" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logLastLine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:35:06 IST" name="afterTest" finished-at="2025-09-03T22:35:08 IST" duration-ms="1519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:OG_image.ScrappersLinkedIn@198b6731]" started-at="2025-09-03T22:35:08 IST" name="afterSuite" finished-at="2025-09-03T22:35:12 IST" duration-ms="3764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- OG_image.ScrappersLinkedIn -->
    </test> <!-- ScrapperTests2 -->
  </suite> <!-- All Test Suite -->
</testng-results>
